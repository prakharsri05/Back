/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  HackathonExperience as PrismaHackathonExperience,
} from "@prisma/client";

export class HackathonExperienceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.HackathonExperienceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.hackathonExperience.count(args);
  }

  async hackathonExperiences(
    args: Prisma.HackathonExperienceFindManyArgs
  ): Promise<PrismaHackathonExperience[]> {
    return this.prisma.hackathonExperience.findMany(args);
  }
  async hackathonExperience(
    args: Prisma.HackathonExperienceFindUniqueArgs
  ): Promise<PrismaHackathonExperience | null> {
    return this.prisma.hackathonExperience.findUnique(args);
  }
  async createHackathonExperience(
    args: Prisma.HackathonExperienceCreateArgs
  ): Promise<PrismaHackathonExperience> {
    return this.prisma.hackathonExperience.create(args);
  }
  async updateHackathonExperience(
    args: Prisma.HackathonExperienceUpdateArgs
  ): Promise<PrismaHackathonExperience> {
    return this.prisma.hackathonExperience.update(args);
  }
  async deleteHackathonExperience(
    args: Prisma.HackathonExperienceDeleteArgs
  ): Promise<PrismaHackathonExperience> {
    return this.prisma.hackathonExperience.delete(args);
  }
}
