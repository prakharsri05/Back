/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PlacementScore as PrismaPlacementScore } from "@prisma/client";

export class PlacementScoreServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PlacementScoreCountArgs, "select">
  ): Promise<number> {
    return this.prisma.placementScore.count(args);
  }

  async placementScores(
    args: Prisma.PlacementScoreFindManyArgs
  ): Promise<PrismaPlacementScore[]> {
    return this.prisma.placementScore.findMany(args);
  }
  async placementScore(
    args: Prisma.PlacementScoreFindUniqueArgs
  ): Promise<PrismaPlacementScore | null> {
    return this.prisma.placementScore.findUnique(args);
  }
  async createPlacementScore(
    args: Prisma.PlacementScoreCreateArgs
  ): Promise<PrismaPlacementScore> {
    return this.prisma.placementScore.create(args);
  }
  async updatePlacementScore(
    args: Prisma.PlacementScoreUpdateArgs
  ): Promise<PrismaPlacementScore> {
    return this.prisma.placementScore.update(args);
  }
  async deletePlacementScore(
    args: Prisma.PlacementScoreDeleteArgs
  ): Promise<PrismaPlacementScore> {
    return this.prisma.placementScore.delete(args);
  }
}
